name: 'Terraform'

on:
  push:
    branches: [ "master" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Check Terraform formatting
      - name: Terraform Format Check
        run: terraform fmt -check

      # Terraform formatting
      - name: Terraform Format
        run: terraform fmt -recursive

      # Terraform Validation
      - name: Terraform Validation
        run: terraform validate

      # Generate an execution plan
      - name: Terraform Plan
        run: terraform plan -input=false -out=plan.tfplan

      # Notify for Manual Approval
      - name: Notify Manual Approval
        run: |
          aws sns publish --topic-arn ${{ secrets.SNS_TOPIC_ARN }} \
            --message "Terraform plan is ready for review. Please approve the workflow to apply changes for s3 backup." \
            --subject "Approval Needed: S3 Backup Terraform Workflow"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      # Await Manual Approval
      - name: Awaiting for Approval
        uses: hmarr/auto-approve-action@v3
        with:
          status: 'waiting-for-approval'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Apply Terraform changes after approval
      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: terraform apply -auto-approve plan.tfplan

      # Notify success
      - name: Notify Success
        if: success()
        run: |
          aws sns publish --topic-arn ${{ secrets.SNS_TOPIC_ARN }} \
            --message "Terraform Apply succeeded! Infrastructure has been updated." \
            --subject "Terraform Apply Success"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

